
/* Tab Bar Configuration Variables */
:root {
    --closeDelay: 180ms;       /* Delay before tab bar closes after mouse leaves */
    --openDelay: 70ms;         /* Delay before tab bar opens on hover */
    --expandedWidth: 200px;    /* Width of tab bar when expanded */
    --collapsedWidth: 32px;    /* Width of tab bar when collapsed */
    --transitionTiming: 50ms ease-out;  /* Speed and style of open/close animation */
}

/* Tab Bar Expansion and Hover Behavior */

.tabbar-wrapper .tabbar-wrapper,
#tabs-container.left,
#tabs-subcontainer.left,
#tabs-container.right,
#tabs-subcontainer.right,
.button-toolbar.workspace-popup.tabbar-workspace-button {
    min-width: var(--collapsedWidth);
    transition: min-width var(--transitionTiming) !important;
}

.tabbar-wrapper .tabbar-wrapper:hover,
#tabs-container.left:hover,
#tabs-subcontainer.left:hover,
#tabs-container.right:hover,
#tabs-subcontainer.right:hover,
.button-toolbar.workspace-popup.tabbar-workspace-button:hover {
    scrollbar-width: auto !important;
    min-width: var(--expandedWidth) !important;
    transition-delay: var(--openDelay) !important;
}

.tabbar-wrapper:not(:hover),
#tabs-container:not(:hover) ~ #tabs-subcontainer:not(:hover),
#tabs-subcontainer:not(:hover) ~ #tabs-container:not(:hover),
.tabbar-workspace-button:not(:hover) {
    transition-delay: var(--closeDelay) !important;
}

.button-toolbar.workspace-popup.tabbar-workspace-button:hover:has(+ #tabs-tabbar-container > #tabs-subcontainer) {
min-width: calc(var(--expandedWidth) + 32px) !important;
max-width: calc(var(--expandedWidth) + 32px) !important;
transition-delay: var(--openDelay) !important;
}

.tabbar-wrapper .tabbar-wrapper:hover:has(#tabs-tabbar-container > #tabs-subcontainer) {
min-width: calc(var(--expandedWidth) + 32px) !important;
max-width: calc(var(--expandedWidth) + 32px) !important;
transition-delay: 400ms !important;
}

.button-toolbar.workspace-popup.tabbar-workspace-button > button {
    justify-content: left !important;
}

#browser:not(.alt-tabs) .tab-position .tab:hover.tab-small:not(.tab-mini).active .title,
#browser:not(.alt-tabs) .tab-position .tab.force-hover.tab-small:not(.tab-mini).active .title {
    display: flex !important;
}

.tabbar-workspace-button {
    width: 100% !important;
}

#tabs-tabbar-container.left,
#tabs-tabbar-container.right {
    width: auto !important;
    min-width: var(--collapsedWidth);
}

.tab-strip {
    &:not(:hover) {scrollbar-width: none;}
    .button-toolbar.newtab {
    left: 0px !important;
    width: 200px;
    }
}

/* leftside 1st button */
.toolbar-mainbar > div:first-child > .page-zoom-controls:is(:hover, :focus-within) > input[type=range] {
    transform: translate(3px, 29px);
}

.toolbar-mainbar > div:first-child > .page-zoom-controls:has(input[type=range]) .button-toolbar:has(button[title="Reset Zoom"]) {
    transform: translate(24px, 18.5px);
}

/* rightside button */
.toolbar-mainbar > div:nth-last-child(4) > .page-zoom-controls:is(:hover, :focus-within) > input[type=range] {
    transform: translate(-10px, 29px);
}

.toolbar-mainbar > div:nth-last-child(3) > .page-zoom-controls:is(:hover, :focus-within) > input[type=range] {
    transform: translate(-44px, 29px);
}

.toolbar-mainbar > div:nth-last-child(3) > .page-zoom-controls input[type=range]::after {
    left: 40%;
}

.toolbar-mainbar > div:nth-last-child(3) > .page-zoom-controls:has(input[type=range]) .button-toolbar:has(button[title="Reset Zoom"]) {
    transform: translate(-24px, 18.5px);
}

.toolbar-mainbar > div:nth-last-child(2) > .page-zoom-controls:is(:hover, :focus-within) > input[type=range] {
    transform: translate(-78px, 29px);
}

.toolbar-mainbar > div:nth-last-child(2) > .page-zoom-controls input[type=range]::after {
    left: 64%;
}

.toolbar-mainbar > div:nth-last-child(2) > .page-zoom-controls:has(input[type=range]) .button-toolbar:has(button[title="Reset Zoom"]) {
    transform: translate(-58px, 18.5px);
}

.toolbar-mainbar > div:last-child > .page-zoom-controls:is(:hover, :focus-within) > input[type=range] {
    transform: translate(-112px, 29px);
}

.toolbar-mainbar > div:last-child > .page-zoom-controls input[type=range]::after {
    left: 88%;
}

.toolbar-mainbar > div:last-child > .page-zoom-controls:has(input[type=range]) .button-toolbar:has(button[title="Reset Zoom"]) {
    transform: translate(-92px, 18.5px);
}

/* Make the expanded tabbar float on the webpage */
#main > .inner > div:has(#tabs-tabbar-container:is(.left, .right)) {
position: absolute;
z-index: 2;
opacity: 1;
background-color: var(--colorBg);
height: 100% !important;
}

#browser.transparent-tabbar .inner > div:has(#tabs-tabbar-container:is(.left, .right)) {
background-color: var(--colorImageFgHeaviest);
}

.inner #webpage-stack {
margin-left: 32px;
}

.inner:has(#tabs-subcontainer:is(.left, .right)) #webpage-stack {
margin-left: 64px;
}

.fullscreen #webpage-stack {
margin-left: 0px;
}

.theme-dark .tab-position .tab.active .tab-header .favicon {
filter: none !important;
}

/* Fixing favicon */
.tab-header {padding-left: 7px !important;}

/* sub tab fix*/
#tabs-container,
#tabs-subcontainer {
    overflow:hidden;
    &.overflow {flex:1 1 auto !important}
}
#tabs-subcontainer:hover .tab-position {
    width:200px;
}
#tabs-subcontainer:not(:hover) .subcontainer-lock:has(.newtab) {flex-direction: column;}
#tabs-subcontainer:not(:hover) .tab-position {
    transition-property: width !important;
    transition-delay: var(--closeDelay) !important;
}
button.ToolbarButton-Button[name="WorkspaceButton"] {
    position: absolute;
    width: 100%;
}

/* Show the close button on hover */
.tab:hover .close {
display: flex !important;
}

/* Disable tabbar resizing (sort of by disabling resize pointer)*/
#tabs-tabbar-container,
#tabs-container,
#tabs-subcontainer,
.tabbar-wrapper,
#tabs-container.left,
#tabs-container.right,
#tabs-subcontainer.left,
#tabs-subcontainer.right {
    resize: none !important;
    cursor: default !important;
}

#tabs-tabbar-container *,
#tabs-container *,
#tabs-subcontainer *,
.tabbar-wrapper * {
    cursor: default !important;
}

/* Slidebar auto expansion fix */
#tabs-tabbar-container > *:not(#tabs-container):not(#tabs-subcontainer) {
    pointer-events: none !important;
}

#tabs-tabbar-container > *:not(#tabs-container):not(#tabs-subcontainer) * {
    pointer-events: auto !important;
}

.SlideBar,
.SlideBar * {
    pointer-events: auto !important;
}

#tabs-container,
#tabs-subcontainer {
    pointer-events: auto !important;
}

/* Prevent expansion when hovering over specific elements */
.SlideBar:hover ~ #tabs-container,
.SlideBar:hover ~ #tabs-subcontainer,
.separator:hover ~ #tabs-container,
.separator:hover ~ #tabs-subcontainer {
    min-width: var(--collapsedWidth) !important;
}